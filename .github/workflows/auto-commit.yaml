name: GitHub App Auto-Commit

on:
  # This workflow will run manually, or on a push to 'main'
  # You can adjust the trigger as needed (e.g., schedule, pull_request)
  workflow_dispatch:
  push:
    branches:
      - main # Adjust to your default branch if it's different (e.g., master)

jobs:
  auto-commit:
    runs-on: ubuntu-latest

    # Grant necessary permissions for the job
    permissions:
      contents: write # This is crucial for committing and pushing changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Configure Git
        run: |
          # Set the Git user name and email to attribute commits to the GitHub App
          # The email format is important for proper attribution on GitHub
          git config user.name "sd-commit-push-app"
          git config user.email "${{ secrets.APP_ID }}+sd-commit-push-app@users.noreply.github.com"

      - name: Make a sample change
        run: |
          # Create or update a file with the current timestamp
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          echo "Last automated update: $TIMESTAMP" > automated_update.txt
          echo "Adding another line for more changes." >> automated_update.txt

      - name: Commit and Push changes
        run: |
          # Check if there are any changes to commit
          git add automated_update.txt
          git commit -m "Automated update by GitHub App: $TIMESTAMP"
          
          
          # Push the changes using the generated installation token
          # We use the token from the previous step (steps.generate_token.outputs.token)
          # The 'x-oauth-basic' is a common placeholder for the username when using a token
          git push https://x-oauth-basic:${{ steps.generate_token.outputs.token }}@github.com/${{ github.repository }} HEAD:main # Adjust 'main' to your target branch
        env:
          # Ensure the token is available as an environment variable for the git push command
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
